{"version":3,"sources":["components/Posts/Post/styles.js","constants/actionTypes.js","api/index.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Navbar/styles.js","images/memories.png","components/Navbar/Navbar.js","components/Form/styles.js","components/Form/Form.js","styles.js","components/Home/Home.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Icon.js","components/Auth/Auth.js","actions/auth.js","App.js","reducers/auth.js","reducers/index.js","reducers/posts.js","index.js"],"names":["makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","CREATE","UPDATE","LIKE","FETCH_ALL","DELETE","AUTH","LOGOUT","API","axios","create","baseURL","headers","interceptors","request","use","req","localStorage","getItem","Authorization","JSON","parse","token","updatePost","id","updatedPost","patch","deletePost","delete","likePost","signIn","formData","post","signUp","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","user","Likes","likes","length","find","like","result","googleId","_id","fontSize","Card","className","CardMedia","image","selectedFile","Typography","variant","name","moment","createdAt","fromNow","creator","Button","style","size","onClick","component","tags","map","tag","gutterBottom","CardContent","message","CardActions","disable","a","api","data","type","payload","console","log","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","Grid","container","item","xs","sm","CircularProgress","appBar","heading","textDecoration","marginLeft","toolbar","width","profile","userName","brandContainer","purple","palette","getContrastText","deepPurple","Navbar","useState","setUser","history","useHistory","location","useLocation","logout","push","useEffect","decode","exp","Date","getTime","AppBar","Link","to","align","src","memories","alt","Toolbar","Avatar","imgUrl","charAt","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","p","clear","Paper","autocomplete","noValidate","TextField","label","fullWidth","value","onChange","e","target","split","multiple","onDone","base64","preventDefault","newPost","createPost","breakpoints","down","Home","get","Grow","in","Container","justify","marginTop","avatar","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","icon","viewBox","fill","d","initialState","firstName","lastName","email","password","confirmPassword","Auth","showPassword","setShowPassword","isSignUp","setIsSignUp","setFormData","googleSuccess","res","profileObj","tokenId","error","maxWidth","elevation","onSubmit","router","signup","signin","prevShowPassword","clientId","process","render","renderProps","disabled","startIcon","Icon","onSuccess","onFailure","cookiePolicy","App","maxwidth","path","exact","authReducer","authData","action","setItem","stringify","combineReducers","filter","auth","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3fcd0fe0.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n","/*if a string is mis spelt the your app would break but your compiler will not\r\nbe able to find error. so we need to assign it to a const so that if that\r\nvariable is mis spelt the compiler will let me knoe. this method helps you\r\ndebug the code.\r\n*/\r\n\r\nexport const CREATE = \"CREATE\";\r\nexport const UPDATE = \"UPDATE\";\r\nexport const LIKE = \"LIKE\";\r\nexport const FETCH_ALL = \"FETCH_ALL\";\r\nexport const DELETE = \"DELETE\";\r\nexport const AUTH = \"AUTH\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL:\"http://localhost:5000\", headers: { 'Content-Type': 'application/json' } })\r\n\r\n//https://memories-fullstack-project.herokuapp.com/posts\r\n//http://localhost:5000/posts\r\n\r\n//function which is going to happen on each one of our request\r\nAPI.interceptors.request.use((req) => {\r\n  if(localStorage.getItem('profile'))\r\n      {req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem(\"profile\")).token}`;}\r\n\r\n  return req; //this is needed to make any request mentioned below\r\n});\r\n\r\nexport const fetchPosts = () => API.get(\"/posts\");\r\nexport const createPost = (newPost) => API.post(\"/posts\", newPost);\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\n\r\nexport const signIn = (formData) => API.post(\"/users/signin\", formData); //fetches existingUser and token from server\r\nexport const signUp = (formData) => API.post('/users/signup', formData);\r\n","import React from \"react\";\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from \"moment\"; //pkg for -> \"the post was created x mins ago\"\r\nimport useStyles from \"./styles.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deletePost, likePost } from \"../../../actions/posts\";\r\n\r\nfunction Post({post, setCurrentId}) { //({post}) destructuring the props\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  const Likes = () => {\r\n    if (post.likes.length > 0) {\r\n      return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\r\n        ? (\r\n          <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\r\n        ) : (\r\n          <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\r\n        );\r\n    }\r\n\r\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\r\n  };\r\n\r\n  return(\r\n    <Card className={classes.card}>\r\n\r\n        <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n\r\n        <div className={classes.overlay}>\r\n            <Typography variant=\"h6\">{post.name}</Typography>\r\n            <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n\r\n        <div className={classes.overlay2}>\r\n           {\r\n             //show only when the current user is the user who created the post\r\n             (user?.result.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n               <Button\r\n                   style={{ color: 'white' }}\r\n                   size=\"small\"\r\n                   onClick={ () => {setCurrentId(post._id)} }>\r\n                   <MoreHorizIcon fontSize=\"default\" />\r\n               </Button>\r\n             )\r\n           }\r\n\r\n      </div>\r\n\r\n      <div className={classes.details}>\r\n           <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n      </div>\r\n\r\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n\r\n      <CardContent>\r\n           <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" component=\"h2\">{post.message}</Typography>\r\n      </CardContent>\r\n\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" disable={!user?.result} onClick={() => { dispatch(likePost(post._id)) }}><Likes /></Button>\r\n\r\n        {//if the current user is the user that created the post then only show delete button\r\n          (user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) &&\r\n          ( <Button size=\"small\" color=\"primary\" onClick={() => { dispatch(deletePost(post._id)) }}>\r\n               <DeleteIcon fontSize=\"small\" /> Delete\r\n            </Button>\r\n          )}\r\n      </CardActions>\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","\r\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from \"../constants/actionTypes.js\";\r\nimport * as api from \"../api\";\r\n\r\n//Action Creators\r\nexport const getPosts = () => async(dispatch) => {\r\n  try{\r\n    //response recieved from an api in the form of an object which is called data\r\n    const {data} = await api.fetchPosts();\r\n\r\n    dispatch( { type: FETCH_ALL, payload: data } ); //dispatch( {in here is the action object} )\r\n  }\r\n  catch(error){\r\n    console.log(error.message);\r\n  }\r\n}\r\n//taking function as a parameter : in thunk\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try{\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch( {type: CREATE, payload: data} ); //dispatch( {in here is the action object} )\r\n  }\r\n  catch(error){\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nexport const updatePost = (id, post) => async(dispatch) => {\r\n  try{\r\n    const {data} = await api.updatePost(id, post); //returns url and updatedPost\r\n    dispatch({ type: UPDATE, payload:data });\r\n  }\r\n  catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try{\r\n    await api.deletePost(id);\r\n    dispatch({ type: DELETE, payload:id });\r\n  }\r\n  catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try{\r\n    const {data} = await api.likePost(id);\r\n    dispatch({ type: LIKE , payload: data });\r\n  }\r\n  catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\nimport useStyles from \"./styles.js\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//need to fetch the data from global redux store\r\n\r\nfunction Posts({setCurrentId}) {\r\n  //state is the global store\r\n  const posts = useSelector( (state) => state.posts );\r\n  const classes = useStyles();\r\n  {/*if no. of posts are 0 -> circularProgress otherwise display it in grid format*/}\r\n  console.log(posts);\r\n  return(\r\n    !posts.length ? <CircularProgress /> : (\r\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n          {\r\n            posts.map( (post) => (\r\n              <Grid key={post._id} item xs={12} sm={6}>\r\n                  <Post post={post} setCurrentId={setCurrentId} />\r\n              </Grid>\r\n            ) )\r\n          }\r\n      </Grid>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import React, {useState, useEffect} from \"react\";\r\nimport { AppBar, Typography, Toolbar, Button, Avatar } from \"@material-ui/core\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport useStyles from \"./styles.js\";\r\nimport decode from \"jwt-decode\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport memories from \"../../images/memories.png\";\r\n\r\nfunction Navbar() {\r\n\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  console.log(user);\r\n\r\n  const logout = () => {\r\n    //we need to dispatch an action when logout button is clicked\r\n    dispatch({ type:\"LOGOUT\" });\r\n    history.push(\"/\");\r\n    setUser(null);\r\n  }\r\n\r\n  useEffect( () => {\r\n    //check for token when signed in with google\r\n    const token = user?.token; //checking if token exists -> send it to token variable\r\n    //if the token does not exist logout the user\r\n    if(token){\r\n      const decodedToken = decode(token); //this tells us when the token will expire\r\n      if(decodedToken.exp *1000 < new Date().getTime()) logout();\r\n    }\r\n    //check for JWT if signed in manually\r\n\r\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  }, [location]);  //when location changes trigger use effect\r\n\r\n  return(\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n       <div className={classes.brandContainer}>\r\n           <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\r\n           <img src={memories} className={classes.image} alt=\"memories-img\" height=\"60\" />\r\n       </div>\r\n       <Toolbar className={classes.toolbar}>\r\n           {/*contains logic depending upon if the user is logged in or not*/\r\n             user ? (\r\n               //if user is logged in then do this\r\n               <div className={classes.profile}>\r\n                   <Avatar className={classes.purple} alt={user.result.name} src={user.result.imgUrl}>{user.result.name.charAt(0)}</Avatar>\r\n                   <Typography className={classes.userName} variant=\"h6\">{user.result.name}</Typography>\r\n                   <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n               </div>\r\n             ) : (\r\n               //if the user isn't logged in show this\r\n               <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/auth\">Sign-in</Button>\r\n             )\r\n           }\r\n       </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"./styles.js\";\r\nimport { TextField, Typography, Button, Paper } from \"@material-ui/core\"\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost, updatePost } from \"../../actions/posts\"\r\n\r\nfunction Form({currentId, setCurrentId}) {\r\n\r\n    const [postData, setPostData] = useState({\r\n      title: '',\r\n      message: '',\r\n      tags: '',\r\n      selectedFile: ''\r\n    });\r\n\r\n  const post = useSelector( (state) => currentId ? state.posts.find( (p) => p._id === currentId ) : null );\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"profile\")); //gets the user\r\n\r\n  //using it to populate the fields of the form.. so that user does not have to type everything again in the name of updation\r\n  useEffect(()=>{\r\n    if(post)\r\n       setPostData(post);\r\n  }, [post]); //second parameter is called a dependency array, tells when the callback function should run\r\n                            //2nd para value changes from null to the value of udated post\r\n\r\n const handleSubmit = (e) => {\r\n   e.preventDefault();\r\n\r\n   if(currentId){ //if the currentId is not null we will update\r\n     dispatch( updatePost(currentId, {...postData, name: user?.result?.name})); //in the () the action that is to be taken is defined\r\n   }                                             //after this define function in api/index.js and actions/posts.js\r\n   else{\r\n     dispatch( createPost({...postData, name: user?.result?.name}) );\r\n   }\r\n   clear();\r\n   //window.location.reload();\r\n }\r\n\r\n const clear = () => {\r\n   setCurrentId(null);\r\n   setPostData({\r\n     title: '',\r\n     message: '',\r\n     tags: '',\r\n     selectedFile: ''\r\n   });\r\n }\r\n\r\n if(!user?.result?.name){\r\n   return (\r\n     <Paper className={classes.paper}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n           Please Sign in to create your own memories and like other's memories\r\n        </Typography>\r\n     </Paper>\r\n   )\r\n }\r\n\r\n  return(\r\n    <>\r\n       <Paper className={classes.paper}>\r\n          <form autocomplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} >\r\n             <Typography variant='h6'>{ currentId ? \"Editing\" : \"Creating\" } a Memory</Typography>\r\n             <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({...postData, title: e.target.value}) } />\r\n             <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({...postData, message: e.target.value}) } />\r\n             <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({...postData, tags: e.target.value.split(',')}) } />\r\n             <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n             <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" onClick={handleSubmit} fullWidth>Submit</Button>\r\n             <Button variant=\"contained\" color=\"secondary\" size=\"small\" fullWidth onClick={clear}>Clear</Button>\r\n          </form>\r\n       </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  [theme.breakpoints.down('sm')] :{\r\n    mainContainer: {\r\n      flexDirection: \"column-reverse\",\r\n    }\r\n  }\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {Container, Grow, Grid} from \"@material-ui/core\";\r\nimport Posts from \"../Posts/Posts\";\r\nimport Form from \"../Form/Form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {getPosts} from \"../../actions/posts\";\r\nimport useStyles from \"../../styles.js\";\r\n\r\nfunction Home() {\r\n\r\n  const [currentId, setCurrentId] = useState(null);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //updating my store after every render\r\n  useEffect( () => {\r\n    dispatch(getPosts());\r\n  }, [currentId, dispatch]);\r\n\r\n  return (\r\n    <Grow in>\r\n       <Container>\r\n          <Grid container className={classes.mainContainer} justify=\"space-between\" align=\"stretch\" spacing={3}>\r\n             <Grid item xs={12} sm={7}>\r\n                <Posts setCurrentId={setCurrentId} />\r\n             </Grid>\r\n             <Grid item xs={12} sm={4}>\r\n                <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n             </Grid>\r\n          </Grid>\r\n       </Container>\r\n    </Grow>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  googleButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\r\n  <Grid item xs={12} sm={half ? 6 : 12}>\r\n    <TextField\r\n      name={name}\r\n      onChange={handleChange}\r\n      variant=\"outlined\"\r\n      required\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      type={type}\r\n      InputProps={name === 'password' ? {\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleShowPassword}>\r\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      } : null}\r\n    />\r\n  </Grid>\r\n);\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst icon = () => (\r\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default icon;\r\n","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { Button, Avatar, Paper, Grid, Container, Typography } from \"@material-ui/core\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport dotenv from \"dotenv\";\r\nimport useStyles from \"./styles.js\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Input from \"./Input\";\r\nimport Icon from \"./Icon\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {signin, signup} from \"../../actions/auth\";\r\n\r\nconst initialState = { firstName: \"\", lastName: \"\", email: \"\", password: \"\", confirmPassword:\"\"};\r\n\r\nfunction Auth() {\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [formData,setFormData] = useState(initialState); //keeping track of any info that changes in the form\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword( (prevShowPassword) => !prevShowPassword); //(prevShowPassword) => !prevShowPassword\r\n  }\r\n\r\n  const switchMode = () => {\r\n    setIsSignUp(!isSignUp);\r\n    setShowPassword(false);\r\n  }\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n\r\n    try{\r\n      dispatch({ type:\"AUTH\", data:{result, token} });\r\n      history.push(\"/\");\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const googleFailure = (error) => {\r\n    console.log(error);\r\n  }\r\n\r\n  const handleSubmit = (e) => { //is triggered when sign-in/sign-up button is clicked\r\n    e.preventDefault();\r\n    if(isSignUp){\r\n      //if the user clicks on the button that reads SIGN UP\r\n      console.log(\"in auth comp\");\r\n      dispatch(signup(formData, history));\r\n    }else{\r\n      //if the user clicks on the button that reads SIGN IN\r\n      dispatch(signin(formData, history));\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({...formData, [e.target.name]:e.target.value});\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n         <Paper className={classes.paper} elevation={3}>\r\n            <Avatar className={classes.avatar}>\r\n               <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography variant=\"h5\">{isSignUp ? 'Sign Up' : 'Sign In'}</Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n               <Grid container spacing={2}>\r\n                  {\r\n                    isSignUp && (\r\n                      <>\r\n                         <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                         <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n                      </>\r\n                    )\r\n                  }\r\n                  <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                  <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n                  {isSignUp && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\r\n               </Grid>\r\n               <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}>\r\n                  {isSignUp ? \"Sign Up\" : \"Sign In\"}\r\n               </Button>\r\n               <GoogleLogin\r\n                  clientId={process.env.REACT_APP_CLIENT_ID}\r\n                  render={(renderProps) => (\r\n                    <Button className={classes.googleButton} color=\"primary\" variant=\"contained\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />}>\r\n                       Google Sign In\r\n                    </Button>\r\n                  )}\r\n                  onSuccess={googleSuccess} //success handler\r\n                  onFailure={googleFailure} //failure handler\r\n                  cookiePolicy=\"single_host_origin\"\r\n               />\r\n               <Grid container>\r\n                  <Grid item justify=\"center\" >\r\n                     <Button onClick={switchMode}>\r\n                        {isSignUp ? \"Already have an account? Sign In\" : \"Don't have an account? Sign Up!\"}\r\n                     </Button>\r\n                  </Grid>\r\n               </Grid>\r\n            </form>\r\n         </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { AUTH } from \"../constants/actionTypes\";\r\nimport * as api from \"../api/index\";\r\n\r\nexport const signin = (formData, history) => async (dispatch) => {\r\n  try{\r\n    //log in the user\r\n    const { data } = await api.signIn(formData);\r\n    dispatch({ type:AUTH, data});\r\n    history.push(\"/\"); //navigate the user to the homepage\r\n  }\r\n  catch(error){\r\n     console.log(error)\r\n  }\r\n};\r\n\r\nexport const signup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signUp(formData);\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {Container} from \"@material-ui/core\"\r\nimport Posts from \"./components/Posts/Posts\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Form from \"./components/Form/Form\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Auth from \"./components/Auth/Auth\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"; //for creating multi page app\r\n\r\nfunction App() {\r\n\r\n  return(\r\n    <BrowserRouter>\r\n       <Container maxwidth=\"lg\" >\r\n          <Navbar />\r\n          <Switch>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/auth\" exact component={Auth} />\r\n          </Switch>\r\n       </Container>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","//reducer is a pure function that takes in previous state and action and returns new state and action\r\n\r\nimport { AUTH, LOGOUT } from \"../constants/actionTypes.js\";\r\n\r\nconst authReducer = (state = {authData:null}, action) => {\r\n  switch(action.type){\r\n    case AUTH :\r\n       localStorage.setItem(\"profile\", JSON.stringify({ ...action?.data }));\r\n       return { ...state, authData: action?.data};\r\n    case LOGOUT:\r\n       localStorage.clear();\r\n       return {...state, authData: null};\r\n\r\n    default:\r\n       return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport posts from \"./posts\"; //reducers mai posts.js\r\nimport auth from \"./auth\"; //reducers mai auth.js\r\n\r\nexport default combineReducers({\r\n  posts: posts,\r\n  auth: auth\r\n});\r\n","//here state = posts\r\n//reducer will be called as soon as dispatch function is executed\r\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from \"../constants/actionTypes.js\";\r\nexport default (posts = [], action) => {\r\n  switch(action.type){\r\n    case LIKE :\r\n       return posts.map( (post) => (post._id === action.payload._id) ? action.payload : post);\r\n\r\n    case DELETE:\r\n       return posts.filter( (post) => post._id !== action.payload);\r\n\r\n    case UPDATE:\r\n       return posts.map( (post) => (post._id === action.payload._id) ? action.payload : post);\r\n\r\n    case FETCH_ALL:\r\n       return action.payload;\r\n\r\n    case CREATE :\r\n       return [...posts, action.payload];\r\n\r\n    default:\r\n       return posts\r\n  }\r\n}\r\n","// where we will connect react file to index.html\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport {Provider} from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\"; //imports index.js file from reducers\r\nimport \"./index.css\";\r\n\r\n//refer notes for meaning\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}> {/*The single Redux store in your application.*/}\r\n     <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\"));\r\n"],"sourceRoot":""}